class Solution {
    pair<int,int> pos(int i, int n){
        int r = (i-1)/n;
        int c = (i-1)%n;
        if(r%2==1){
            c = n - c - 1;
        }
        r = n - r - 1;
        return {r,c};
    }
public:
    int snakesAndLadders(vector<vector<int>>& board) {
        int n = board.size();
        vector<int>dist(n*n+1, -1);
        dist[1] = 0;
        queue<int>q; 
        q.push(1);
        while(!q.empty()){
            int a = q.front();
            q.pop();
            for(int i = a+1; i<=min(a+6,n*n); ++i){
                pair<int,int>p = pos(i, n);
                int dest = board[p.first][p.second]!=-1? board[p.first][p.second] : i;
                if(dist[dest]==-1){
                    dist[dest] = dist[a] + 1;
                    q.push(dest);
                }
            }
        }
        return dist[n*n];
    }
};
