class Solution {
public:
    vector<string> letterCombinations(string digits) {
        vector<string>res;
        if(digits.empty()) return res;
        map<char, string>m ={
            {'2', "abc"},
            {'3', "def"},
            {'4', "ghi"},
            {'5', "jkl"},
            {'6', "mno"},
            {'7', "pqrs"},
            {'8', "tuv"},
            {'9', "wxyz"},
        };

        string combo;
        back(digits, 0, m, combo, res);

        return res;
    }

    void back(string &digits, int indx, map<char, string>&m, string& combo, vector<string>&res){
        if(indx == digits.length()){
            res.push_back(combo);
            return;
        }

        char digit = digits[indx];
        string letters = m[digit];
        for(char letter : letters){
            combo.push_back(letter);
            back(digits, indx+1, m, combo, res);
            combo.pop_back();
        }
    }
};
